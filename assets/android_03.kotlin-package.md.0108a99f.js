import{_ as a,o as s,c as e,V as o}from"./chunks/framework.abf2da00.js";const h=JSON.parse('{"title":"package","description":"","frontmatter":{},"headers":[],"relativePath":"android/03.kotlin-package.md","filePath":"android/03.kotlin-package.md","lastUpdated":1687940634000}'),l={name:"android/03.kotlin-package.md"},n=o(`<h1 id="package" tabindex="-1">package <a class="header-anchor" href="#package" aria-label="Permalink to &quot;package&quot;">​</a></h1><h2 id="声明包" tabindex="-1">声明包 <a class="header-anchor" href="#声明包" aria-label="Permalink to &quot;声明包&quot;">​</a></h2><p>声明文件所在的包。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">mao</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">demo</span></span></code></pre></div><h2 id="导入一个包" tabindex="-1">导入一个包 <a class="header-anchor" href="#导入一个包" aria-label="Permalink to &quot;导入一个包&quot;">​</a></h2><p>可以导入一个单独的名字</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">example</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Message </span><span style="color:#676E95;font-style:italic;">// 现在 Message 可以不用限定符访问</span></span></code></pre></div><p>也可以导入一个作用域下的所有内容（包、类、对象等）:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">example</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">*</span><span style="color:#C792EA;"> </span><span style="color:#676E95;font-style:italic;">// “org.example”中的一切都可访问</span></span></code></pre></div><p>如果出现名字冲突，可以使用 <code>as</code> 关键字在本地重命名冲突项来消歧义：</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">example</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Message </span><span style="color:#676E95;font-style:italic;">// Message 可访问</span></span>
<span class="line"><span style="color:#C792EA;">import org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">test</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Message as testMessage </span><span style="color:#676E95;font-style:italic;">// testMessage 代表“org.test.Message”</span></span></code></pre></div>`,11),p=[n];function t(c,r,i,d,y,C){return s(),e("div",null,p)}const m=a(l,[["render",t]]);export{h as __pageData,m as default};
