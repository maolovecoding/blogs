import{_ as s,o as a,c as n,V as l}from"./chunks/framework.abf2da00.js";const F=JSON.parse('{"title":"prisma","description":"","frontmatter":{},"headers":[],"relativePath":"web/node/1.prisma.base.md","filePath":"web/node/1.prisma.base.md","lastUpdated":1688364979000}'),p={name:"web/node/1.prisma.base.md"},o=l(`<h1 id="prisma" tabindex="-1">prisma <a class="header-anchor" href="#prisma" aria-label="Permalink to &quot;prisma&quot;">​</a></h1><h1 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h1><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">prisma</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@prisma/client</span></span></code></pre></div><p>安装的第一个 prisma，它是一个 CLI 命令，主要通过它来调用 Prisma 的各种功能，包括数据库迁移，创建Prisma Client 等等。</p><h2 id="初始化-prisma" tabindex="-1">初始化 Prisma <a class="header-anchor" href="#初始化-prisma" aria-label="Permalink to &quot;初始化 Prisma&quot;">​</a></h2><p>使用cli提供的init命令。</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">prisma</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span></code></pre></div><p>会在项目根目录下声明prisma目录，目录下有<code>schema.prisma</code>文件，以及根目录下生成了 <code>.env</code>文件。</p><h2 id="vsc安装prisma插件" tabindex="-1">vsc安装prisma插件 <a class="header-anchor" href="#vsc安装prisma插件" aria-label="Permalink to &quot;vsc安装prisma插件&quot;">​</a></h2><p>安装插件prisma，可以提供类型提示，语法提示，代码高亮。</p><h2 id="设计-prisma-schema" tabindex="-1">设计 Prisma Schema <a class="header-anchor" href="#设计-prisma-schema" aria-label="Permalink to &quot;设计 Prisma Schema&quot;">​</a></h2><p><code>schema.prisma</code> 是使用 <code>Prisma</code> 的主要配置文件，称之为 <code>Prisma schema</code> 文件，它包含三个基本结构：</p><ul><li>数据源</li><li>生成器</li><li>数据模型定义</li></ul><h2 id="设置生成器" tabindex="-1">设置生成器 <a class="header-anchor" href="#设置生成器" aria-label="Permalink to &quot;设置生成器&quot;">​</a></h2><p>使用 generate 定义生成器，通过 provider 属性声明为 prisma-client-js（目前也只支持这一种）。当执行 prisma generate 命令时就会生成 Prisma Client，使用它完成数据的增删改查。</p><div class="language-prisma"><button title="Copy Code" class="copy"></button><span class="lang">prisma</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">generator</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">client</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  provider </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;prisma-client-js&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h2 id="设置数据源" tabindex="-1">设置数据源 <a class="header-anchor" href="#设置数据源" aria-label="Permalink to &quot;设置数据源&quot;">​</a></h2><p>使用 <code>datasource</code>定义数据源。</p><ul><li>url是数据库url，可以直接在这里定义，也可以使用<code>env</code>函数读取<code>.env</code>配置文件定义好的数据库URL</li><li>provider是数据库连接的类型</li></ul><div class="language-prisma"><button title="Copy Code" class="copy"></button><span class="lang">prisma</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">datasource</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">db</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  provider </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;sqlite&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  url      </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">env</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">&quot;DATABASE_URL&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>一般情况下，如果我们连接mysql，需要在 <code>.env</code>文件中配置下面这个东西：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// protocol://user:password@localhost:port/database</span></span>
<span class="line"><span style="color:#A6ACCD;">DATABASE_URL</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mysql://root:root123@localhost:3306/prisma</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h2 id="定义模型" tabindex="-1">定义模型 <a class="header-anchor" href="#定义模型" aria-label="Permalink to &quot;定义模型&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">model User </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">id</span><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">Int</span><span style="color:#F07178;">      </span><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">id</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">default</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">autoincrement</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">String</span><span style="color:#F07178;">   </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">email</span><span style="color:#F07178;">       </span><span style="color:#A6ACCD;">String</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">unique</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">password</span><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">String</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">createdTime</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">DateTime</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">default</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">now</span><span style="color:#F07178;">()) </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">created_time</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">updatedTime</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">DateTime</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">updatedAt</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">updated_time</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">​</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">@</span><span style="color:#F07178;">@</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>一般情况下，模型名就是数据库中的表名，我们可以通过 <code>@@map</code>重映射</p><h2 id="同步数据库" tabindex="-1">同步数据库 <a class="header-anchor" href="#同步数据库" aria-label="Permalink to &quot;同步数据库&quot;">​</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">prisma</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span></span></code></pre></div><p>这个是新项目刚创建，会去创建数据库，对应的表结构等。</p><h2 id="更改表结构" tabindex="-1">更改表结构 <a class="header-anchor" href="#更改表结构" aria-label="Permalink to &quot;更改表结构&quot;">​</a></h2><p>同步数据库的时候会默认走一次 <code>prisma generate</code>去生成表结构。如果我们修改了模型，那么需要再走一次这个命令：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">prisma</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">generate</span></span></code></pre></div><p>带来的后果就是所有的数据库表都会删除重建。数据都会没了。</p>`,32),e=[o];function t(r,c,i,y,d,C){return a(),n("div",null,e)}const A=s(p,[["render",t]]);export{F as __pageData,A as default};
