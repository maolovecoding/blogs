import{_ as s,o as a,c as l,V as n}from"./chunks/framework.abf2da00.js";const A=JSON.parse('{"title":"在shell中获取当前项目git分支并赋值给shell变量","description":"","frontmatter":{},"headers":[],"relativePath":"shell/01.如何拿到当前的git分支并赋值给shell变量.md","filePath":"shell/01.如何拿到当前的git分支并赋值给shell变量.md","lastUpdated":1687680556000}'),o={name:"shell/01.如何拿到当前的git分支并赋值给shell变量.md"},p=n(`<h1 id="在shell中获取当前项目git分支并赋值给shell变量" tabindex="-1">在shell中获取当前项目git分支并赋值给shell变量 <a class="header-anchor" href="#在shell中获取当前项目git分支并赋值给shell变量" aria-label="Permalink to &quot;在shell中获取当前项目git分支并赋值给shell变量&quot;">​</a></h1><h2 id="写一个shell脚本" tabindex="-1">写一个shell脚本 <a class="header-anchor" href="#写一个shell脚本" aria-label="Permalink to &quot;写一个shell脚本&quot;">​</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 返回$1指定的git项目的当前分支(branch)或标签名(tag)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># $1 git项目源码位置,为空获则默认为当前文件夹</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">current_branch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">local</span><span style="color:#A6ACCD;"> folder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;$(</span><span style="color:#82AAFF;">pwd</span><span style="color:#89DDFF;">)&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-n</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;font-style:italic;">$1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> folder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;font-style:italic;">$1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">local</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> -C </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$folder</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> rev-parse --abbrev-ref HEAD </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">grep</span><span style="color:#C3E88D;"> -v HEAD </span><span style="color:#89DDFF;">||</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> -C </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$folder</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> describe --exact-match HEAD </span><span style="color:#89DDFF;">||</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> -C </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$folder</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> rev-parse HEAD</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$result</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 开发分支</span></span>
<span class="line"><span style="color:#A6ACCD;">branch</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">current_branch</span><span style="color:#C3E88D;"> .</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><p>我们可以通过一个shell函数的形式，每次调用该函数的时候传递一个项目路径，就可以获取到这个路径所在项目当前的git分支是什么。 比如：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">current_branch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#FFCB6B;">current_branch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/xx/x</span></span></code></pre></div><h2 id="提交代码" tabindex="-1">提交代码 <a class="header-anchor" href="#提交代码" aria-label="Permalink to &quot;提交代码&quot;">​</a></h2><p>如果要做自动推代码等的能力，我们就可以这样：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deploy push md</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> $branch</span></span></code></pre></div>`,9),e=[p];function t(c,r,D,y,C,i){return a(),l("div",null,e)}const h=s(o,[["render",t]]);export{A as __pageData,h as default};
